/* SSR renderer that renders the actual React component for Template4 using ReactDOMServer */
require('@babel/register')({
  presets: ['@babel/preset-env', '@babel/preset-react'],
  extensions: ['.js', '.jsx']
});

const path = require('path');
const { createRequire } = require('module');

// create a require() that resolves modules from the client/ folder so react and bootstrap resolve correctly
const clientRequire = createRequire(path.resolve(__dirname, '..', '..', 'client', 'package.json'));
const React = clientRequire('react');
const ReactDOMServer = clientRequire('react-dom/server');

// require the client component using the clientRequire so all imports resolve from client/node_modules
const Template4 = clientRequire(path.resolve(__dirname, '..', '..', 'client', 'src', 'templates', 'Template4.js')).default;

function renderTemplate4SSR(data, options = {}) {
  const element = React.createElement(Template4, { isPreview: false, userData: data });
  const inner = ReactDOMServer.renderToString(element);

  // Inline the same CSS the client injects so SSR matches the preview exactly
  const head = `\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width,initial-scale=1">\n    <title>${data.name || ''} â€” ${data.title || ''}</title>\n    <style>\n      @keyframes minimalFloat {\n        0%, 100% { transform: translateY(0px); }\n        50% { transform: translateY(-8px); }\n      }\n      \n      @keyframes fadeInUp {\n        0% { transform: translateY(30px); opacity: 0; }\n        100% { transform: translateY(0); opacity: 1; }\n      }\n      \n      @keyframes slideInMinimal {\n        0% { transform: translateX(-20px); opacity: 0; }\n        100% { transform: translateX(0); opacity: 1; }\n      }\n      \n      @keyframes minimalPulse {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.02); }\n      }\n      \n      .minimal-card {\n        transform-style: preserve-3d;\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      \n      .minimal-card:hover {\n        transform: translateY(-5px) rotateX(2deg);\n        box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n      }\n      \n      .skill-minimal {\n        transition: all 0.3s ease;\n      }\n      \n      .skill-minimal:hover {\n        transform: translateX(10px);\n      }\n      \n      .project-minimal {\n        transform-style: preserve-3d;\n        transition: all 0.4s ease;\n      }\n      \n      .project-minimal:hover {\n        transform: translateZ(10px) rotateY(2deg);\n      }\n      \n      .typography-element {\n        animation: fadeInUp 0.8s ease-out;\n      }\n      \n      .minimal-button {\n        transition: all 0.3s ease;\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .minimal-button:hover {\n        transform: translateY(-2px);\n      }\n      \n      .minimal-button::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n        transition: left 0.5s;\n      }\n      \n      .minimal-button:hover::before {\n        left: 100%;\n      }\n      \n      /* ULTRA STRONG FORCE SQUARE PROFILE IMAGE - MATCH BACKEND */\n      .profile-img,\n      img.profile-img,\n      .hero-content img,\n      .minimal-hero img,\n      img[alt*="profile"],\n      img[src*="profileImage"],\n      img[class*="profile"],\n      .rounded,\n      .rounded-circle,\n      img.rounded,\n      img.rounded-circle,\n      .img-thumbnail {\n        border-radius: 0 !important;\n        -webkit-border-radius: 0 !important;\n        -moz-border-radius: 0 !important;\n        -ms-border-radius: 0 !important;\n        border-top-left-radius: 0 !important;\n        border-top-right-radius: 0 !important;\n        border-bottom-left-radius: 0 !important;\n        border-bottom-right-radius: 0 !important;\n        width: 300px !important;\n        height: 300px !important;\n        max-width: 300px !important;\n        max-height: 300px !important;\n        object-fit: cover !important;\n      }\n      \n      /* Mobile Responsive Styles */\n      @media (max-width: 768px) {\n        .minimal-card:hover,\n        .skill-minimal:hover,\n        .project-minimal:hover,\n        .minimal-button:hover {\n          transform: none !important;\n        }\n        \n        .typography-element {\n          animation: none !important;\n        }\n        \n        h1 {\n          font-size: 2rem !important;\n        }\n        \n        h2 {\n          font-size: 1.5rem !important;\n        }\n        \n        h3 {\n          font-size: 1.25rem !important;\n        }\n        \n        .container {\n          padding-left: 15px !important;\n          padding-right: 15px !important;\n        }\n        \n        .btn {\n          width: 100% !important;\n          margin-bottom: 0.5rem !important;\n        }\n        \n        nav {\n          padding: 0.5rem 0 !important;\n        }\n        \n        section {\n          padding: 60px 0 !important;\n        }\n      }\n      \n      @media (max-width: 480px) {\n        h1 {\n          font-size: 1.75rem !important;\n        }\n        \n        h2 {\n          font-size: 1.25rem !important;\n        }\n        \n        h3 {\n          font-size: 1.1rem !important;\n        }\n        \n        .container {\n          padding-left: 10px !important;\n          padding-right: 10px !important;\n        }\n        \n        .btn {\n          font-size: 0.9rem !important;\n          padding: 0.6rem 1rem !important;\n        }\n        \n        .card {\n          padding: 1rem !important;\n        }\n      }\n    </style>\n  `;

  const hydrateScript = `\n    <script>window.__PORTFOLIO_DATA__ = ${JSON.stringify(data)};</script>\n    ${options.hydrate && options.clientBundleUrl ? `<script src=\"${options.clientBundleUrl}\"></script>` : ''}\n  `;

  return `<!doctype html><html lang=\"en\"><head>${head}</head><body><div id=\"root\">${inner}</div>${hydrateScript}</body></html>`;
}

module.exports = { renderTemplate4SSR };
